// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packet.proto

#ifndef PROTOBUF_packet_2eproto__INCLUDED
#define PROTOBUF_packet_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace packet {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_packet_2eproto();
void protobuf_AssignDesc_packet_2eproto();
void protobuf_ShutdownFile_packet_2eproto();

class C_Login;
class S_Login;
class S_Start;
class C_SetPiece;
class S_SetPiece;
class S_End;

enum MessageType {
  C_LOGIN = 0,
  S_LOGIN = 1,
  S_START = 2,
  C_SET_PIECE = 3,
  S_SET_PIECE = 4,
  S_END = 5
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = C_LOGIN;
const MessageType MessageType_MAX = S_END;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
// ===================================================================

class C_Login : public ::google::protobuf::Message {
 public:
  C_Login();
  virtual ~C_Login();

  C_Login(const C_Login& from);

  inline C_Login& operator=(const C_Login& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_Login& default_instance();

  void Swap(C_Login* other);

  // implements Message ----------------------------------------------

  C_Login* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C_Login& from);
  void MergeFrom(const C_Login& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:packet.C_Login)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_packet_2eproto();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
  static C_Login* default_instance_;
};
// -------------------------------------------------------------------

class S_Login : public ::google::protobuf::Message {
 public:
  S_Login();
  virtual ~S_Login();

  S_Login(const S_Login& from);

  inline S_Login& operator=(const S_Login& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_Login& default_instance();

  void Swap(S_Login* other);

  // implements Message ----------------------------------------------

  S_Login* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_Login& from);
  void MergeFrom(const S_Login& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:packet.S_Login)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_packet_2eproto();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
  static S_Login* default_instance_;
};
// -------------------------------------------------------------------

class S_Start : public ::google::protobuf::Message {
 public:
  S_Start();
  virtual ~S_Start();

  S_Start(const S_Start& from);

  inline S_Start& operator=(const S_Start& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_Start& default_instance();

  void Swap(S_Start* other);

  // implements Message ----------------------------------------------

  S_Start* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_Start& from);
  void MergeFrom(const S_Start& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 your_piece = 1;
  inline bool has_your_piece() const;
  inline void clear_your_piece();
  static const int kYourPieceFieldNumber = 1;
  inline ::google::protobuf::int32 your_piece() const;
  inline void set_your_piece(::google::protobuf::int32 value);

  // repeated int32 piece_list = 2;
  inline int piece_list_size() const;
  inline void clear_piece_list();
  static const int kPieceListFieldNumber = 2;
  inline ::google::protobuf::int32 piece_list(int index) const;
  inline void set_piece_list(int index, ::google::protobuf::int32 value);
  inline void add_piece_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      piece_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_piece_list();

  // required int32 first_turn = 3;
  inline bool has_first_turn() const;
  inline void clear_first_turn();
  static const int kFirstTurnFieldNumber = 3;
  inline ::google::protobuf::int32 first_turn() const;
  inline void set_first_turn(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:packet.S_Start)
 private:
  inline void set_has_your_piece();
  inline void clear_has_your_piece();
  inline void set_has_first_turn();
  inline void clear_has_first_turn();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > piece_list_;
  ::google::protobuf::int32 your_piece_;
  ::google::protobuf::int32 first_turn_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_packet_2eproto();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
  static S_Start* default_instance_;
};
// -------------------------------------------------------------------

class C_SetPiece : public ::google::protobuf::Message {
 public:
  C_SetPiece();
  virtual ~C_SetPiece();

  C_SetPiece(const C_SetPiece& from);

  inline C_SetPiece& operator=(const C_SetPiece& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_SetPiece& default_instance();

  void Swap(C_SetPiece* other);

  // implements Message ----------------------------------------------

  C_SetPiece* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C_SetPiece& from);
  void MergeFrom(const C_SetPiece& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 pos_index = 1;
  inline bool has_pos_index() const;
  inline void clear_pos_index();
  static const int kPosIndexFieldNumber = 1;
  inline ::google::protobuf::int32 pos_index() const;
  inline void set_pos_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:packet.C_SetPiece)
 private:
  inline void set_has_pos_index();
  inline void clear_has_pos_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 pos_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_packet_2eproto();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
  static C_SetPiece* default_instance_;
};
// -------------------------------------------------------------------

class S_SetPiece : public ::google::protobuf::Message {
 public:
  S_SetPiece();
  virtual ~S_SetPiece();

  S_SetPiece(const S_SetPiece& from);

  inline S_SetPiece& operator=(const S_SetPiece& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_SetPiece& default_instance();

  void Swap(S_SetPiece* other);

  // implements Message ----------------------------------------------

  S_SetPiece* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_SetPiece& from);
  void MergeFrom(const S_SetPiece& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 piece = 1;
  inline bool has_piece() const;
  inline void clear_piece();
  static const int kPieceFieldNumber = 1;
  inline ::google::protobuf::int32 piece() const;
  inline void set_piece(::google::protobuf::int32 value);

  // required int32 pos_index = 2;
  inline bool has_pos_index() const;
  inline void clear_pos_index();
  static const int kPosIndexFieldNumber = 2;
  inline ::google::protobuf::int32 pos_index() const;
  inline void set_pos_index(::google::protobuf::int32 value);

  // repeated int32 piece_list = 3;
  inline int piece_list_size() const;
  inline void clear_piece_list();
  static const int kPieceListFieldNumber = 3;
  inline ::google::protobuf::int32 piece_list(int index) const;
  inline void set_piece_list(int index, ::google::protobuf::int32 value);
  inline void add_piece_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      piece_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_piece_list();

  // required int32 next_turn = 4;
  inline bool has_next_turn() const;
  inline void clear_next_turn();
  static const int kNextTurnFieldNumber = 4;
  inline ::google::protobuf::int32 next_turn() const;
  inline void set_next_turn(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:packet.S_SetPiece)
 private:
  inline void set_has_piece();
  inline void clear_has_piece();
  inline void set_has_pos_index();
  inline void clear_has_pos_index();
  inline void set_has_next_turn();
  inline void clear_has_next_turn();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 piece_;
  ::google::protobuf::int32 pos_index_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > piece_list_;
  ::google::protobuf::int32 next_turn_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_packet_2eproto();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
  static S_SetPiece* default_instance_;
};
// -------------------------------------------------------------------

class S_End : public ::google::protobuf::Message {
 public:
  S_End();
  virtual ~S_End();

  S_End(const S_End& from);

  inline S_End& operator=(const S_End& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S_End& default_instance();

  void Swap(S_End* other);

  // implements Message ----------------------------------------------

  S_End* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S_End& from);
  void MergeFrom(const S_End& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 winner_id = 1;
  inline bool has_winner_id() const;
  inline void clear_winner_id();
  static const int kWinnerIdFieldNumber = 1;
  inline ::google::protobuf::int32 winner_id() const;
  inline void set_winner_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:packet.S_End)
 private:
  inline void set_has_winner_id();
  inline void clear_has_winner_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 winner_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_packet_2eproto();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
  static S_End* default_instance_;
};
// ===================================================================


// ===================================================================

// C_Login

// -------------------------------------------------------------------

// S_Login

// required int32 id = 1;
inline bool S_Login::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_Login::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_Login::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_Login::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 S_Login::id() const {
  return id_;
}
inline void S_Login::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// S_Start

// required int32 your_piece = 1;
inline bool S_Start::has_your_piece() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_Start::set_has_your_piece() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_Start::clear_has_your_piece() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_Start::clear_your_piece() {
  your_piece_ = 0;
  clear_has_your_piece();
}
inline ::google::protobuf::int32 S_Start::your_piece() const {
  return your_piece_;
}
inline void S_Start::set_your_piece(::google::protobuf::int32 value) {
  set_has_your_piece();
  your_piece_ = value;
}

// repeated int32 piece_list = 2;
inline int S_Start::piece_list_size() const {
  return piece_list_.size();
}
inline void S_Start::clear_piece_list() {
  piece_list_.Clear();
}
inline ::google::protobuf::int32 S_Start::piece_list(int index) const {
  return piece_list_.Get(index);
}
inline void S_Start::set_piece_list(int index, ::google::protobuf::int32 value) {
  piece_list_.Set(index, value);
}
inline void S_Start::add_piece_list(::google::protobuf::int32 value) {
  piece_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
S_Start::piece_list() const {
  return piece_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
S_Start::mutable_piece_list() {
  return &piece_list_;
}

// required int32 first_turn = 3;
inline bool S_Start::has_first_turn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S_Start::set_has_first_turn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S_Start::clear_has_first_turn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S_Start::clear_first_turn() {
  first_turn_ = 0;
  clear_has_first_turn();
}
inline ::google::protobuf::int32 S_Start::first_turn() const {
  return first_turn_;
}
inline void S_Start::set_first_turn(::google::protobuf::int32 value) {
  set_has_first_turn();
  first_turn_ = value;
}

// -------------------------------------------------------------------

// C_SetPiece

// required int32 pos_index = 1;
inline bool C_SetPiece::has_pos_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_SetPiece::set_has_pos_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_SetPiece::clear_has_pos_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C_SetPiece::clear_pos_index() {
  pos_index_ = 0;
  clear_has_pos_index();
}
inline ::google::protobuf::int32 C_SetPiece::pos_index() const {
  return pos_index_;
}
inline void C_SetPiece::set_pos_index(::google::protobuf::int32 value) {
  set_has_pos_index();
  pos_index_ = value;
}

// -------------------------------------------------------------------

// S_SetPiece

// required int32 piece = 1;
inline bool S_SetPiece::has_piece() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_SetPiece::set_has_piece() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_SetPiece::clear_has_piece() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_SetPiece::clear_piece() {
  piece_ = 0;
  clear_has_piece();
}
inline ::google::protobuf::int32 S_SetPiece::piece() const {
  return piece_;
}
inline void S_SetPiece::set_piece(::google::protobuf::int32 value) {
  set_has_piece();
  piece_ = value;
}

// required int32 pos_index = 2;
inline bool S_SetPiece::has_pos_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S_SetPiece::set_has_pos_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S_SetPiece::clear_has_pos_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S_SetPiece::clear_pos_index() {
  pos_index_ = 0;
  clear_has_pos_index();
}
inline ::google::protobuf::int32 S_SetPiece::pos_index() const {
  return pos_index_;
}
inline void S_SetPiece::set_pos_index(::google::protobuf::int32 value) {
  set_has_pos_index();
  pos_index_ = value;
}

// repeated int32 piece_list = 3;
inline int S_SetPiece::piece_list_size() const {
  return piece_list_.size();
}
inline void S_SetPiece::clear_piece_list() {
  piece_list_.Clear();
}
inline ::google::protobuf::int32 S_SetPiece::piece_list(int index) const {
  return piece_list_.Get(index);
}
inline void S_SetPiece::set_piece_list(int index, ::google::protobuf::int32 value) {
  piece_list_.Set(index, value);
}
inline void S_SetPiece::add_piece_list(::google::protobuf::int32 value) {
  piece_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
S_SetPiece::piece_list() const {
  return piece_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
S_SetPiece::mutable_piece_list() {
  return &piece_list_;
}

// required int32 next_turn = 4;
inline bool S_SetPiece::has_next_turn() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S_SetPiece::set_has_next_turn() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S_SetPiece::clear_has_next_turn() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S_SetPiece::clear_next_turn() {
  next_turn_ = 0;
  clear_has_next_turn();
}
inline ::google::protobuf::int32 S_SetPiece::next_turn() const {
  return next_turn_;
}
inline void S_SetPiece::set_next_turn(::google::protobuf::int32 value) {
  set_has_next_turn();
  next_turn_ = value;
}

// -------------------------------------------------------------------

// S_End

// required int32 winner_id = 1;
inline bool S_End::has_winner_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S_End::set_has_winner_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S_End::clear_has_winner_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S_End::clear_winner_id() {
  winner_id_ = 0;
  clear_has_winner_id();
}
inline ::google::protobuf::int32 S_End::winner_id() const {
  return winner_id_;
}
inline void S_End::set_winner_id(::google::protobuf::int32 value) {
  set_has_winner_id();
  winner_id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace packet

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::packet::MessageType>() {
  return ::packet::MessageType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_packet_2eproto__INCLUDED
